{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusti\\\\Desktop\\\\projetosJs\\\\styled\\\\styled\\\\src\\\\Components\\\\Conta\\\\index.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport privado from \"../../assets/images/privado.svg\";\nimport olho_icone from \"../../assets/images/olho.svg\";\nimport dinheiro from \"../../assets/images/dinheiro.svg\";\nimport gif from \"../../assets/images/kk.gif\";\nimport { Icone, Box, Botao, Saldo, Detalhe, IconeTema, Input } from \"../../Components/ui/index\";\nconst IconeMargin = styled(Icone)`\n  margin-top: 2px;\n`;\nconst Span = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\nconst Conta = () => {\n  const [toggleState, untoggle] = useState(true);\n  const [saldo, setSaldo] = useState(500);\n  const [getSaldo, setInput] = useState(0);\n  const [mensagemErro, setMensagem] = useState(\"\");\n\n  const atualizaSaldo = () => {\n    if (getSaldo > 0) {\n      setSaldo(getSaldo);\n      setMensagem(\"\");\n    } else {\n      setMensagem(\"Não foi possível atualizar seu saldo\");\n    }\n  };\n\n  const obterSaldo = event => {\n    setInput(event.target.value);\n  };\n\n  const toggleHandler = () => {\n    untoggle(toggleState => !toggleState);\n    setMensagem(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Conta\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"26px\",\n      padding: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Saldo dispon\\xEDvel\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconeTema, {\n    src: dinheiro,\n    alt: \"\\xCDcone Saldo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), toggleState ? /*#__PURE__*/React.createElement(Saldo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Detalhe, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"R$\"), \" \", saldo, \" \") : null, /*#__PURE__*/React.createElement(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, mensagemErro), /*#__PURE__*/React.createElement(Botao, {\n    onClick: atualizaSaldo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Atualizar\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: obterSaldo,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Botao, {\n    onClick: toggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconeMargin, {\n    src: toggleState ? privado : olho_icone,\n    alt: \"Privacidade do Saldo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    src: gif,\n    wh: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Conta;","map":{"version":3,"sources":["C:/Users/gusti/Desktop/projetosJs/styled/styled/src/Components/Conta/index.jsx"],"names":["React","useState","styled","gif","Icone","Box","Botao","Saldo","Detalhe","IconeTema","Input","IconeMargin","Span","span","Conta","toggleState","untoggle","saldo","setSaldo","getSaldo","setInput","mensagemErro","setMensagem","atualizaSaldo","obterSaldo","event","target","value","toggleHandler","fontSize","padding","dinheiro","privado","olho_icone"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport privado from \"../../assets/images/privado.svg\";\nimport olho_icone from \"../../assets/images/olho.svg\";\nimport dinheiro from \"../../assets/images/dinheiro.svg\";\nimport gif from \"../../assets/images/kk.gif\"\n\nimport {\n  Icone,\n  Box,\n  Botao,\n  Saldo,\n  Detalhe,\n  IconeTema,\n  Input,\n} from \"../../Components/ui/index\";\n\nconst IconeMargin = styled(Icone)`\n  margin-top: 2px;\n`;\n\nconst Span = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\nconst Conta = () => {\n  const [toggleState, untoggle] = useState(true);\n\n  const [saldo, setSaldo] = useState(500);\n\n  const [getSaldo, setInput] = useState(0);\n\n  const [mensagemErro, setMensagem] = useState(\"\");\n\n  const atualizaSaldo = () => {\n    if (getSaldo > 0) {\n      setSaldo(getSaldo);\n      setMensagem(\"\");\n    } else {\n      setMensagem(\"Não foi possível atualizar seu saldo\");\n    }\n  };\n\n  const obterSaldo = (event) => {\n    setInput(event.target.value);\n  };\n\n  const toggleHandler = () => {\n    untoggle((toggleState) => !toggleState);\n    setMensagem(\"\");\n  };\n\n  return (\n    <Box>\n      <h2>Conta</h2>\n      <div style={{ fontSize: \"26px\", padding: \"20px 0\" }}>\n        Saldo disponível{\" \"}\n        <span>\n          <IconeTema src={dinheiro} alt=\"Ícone Saldo\" />\n        </span>\n        {toggleState ? (\n          <Saldo>\n            <Detalhe>R$</Detalhe> {saldo}{\" \"}\n          </Saldo>\n        ) : null}\n        <Span>{mensagemErro}</Span>\n        <Botao onClick={atualizaSaldo}>Atualizar</Botao>\n        <Input onChange={obterSaldo} type=\"number\" />\n        <Botao onClick={toggleHandler}>\n          <IconeMargin\n            src={toggleState ? privado : olho_icone}\n            alt=\"Privacidade do Saldo\"\n          />\n        </Botao>\n      </div>\n      <img src={gif} wh></img>\n    </Box>\n  );\n};\n\nexport default Conta;\n"]},"metadata":{},"sourceType":"module"}